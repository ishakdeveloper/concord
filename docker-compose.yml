version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
    env_file:
      - web/.env.docker
    depends_on:
      - server

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
    env_file:
      - server/.env.docker
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy

  ws:
    build:
      context: ./ws
      dockerfile: Dockerfile
    ports:
      - '4001:4001'
    environment:
      - NODE_ENV=development
    env_file:
      - ws/.env.docker
    depends_on:
      - server

  db:
    image: postgres:16-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=concord_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  uploads:
