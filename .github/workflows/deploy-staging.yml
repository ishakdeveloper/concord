name: Staging Deployment

on:
  push:
    branches: [staging]
    paths:
      - 'web/**'
      - 'server/**'
      - 'ws/**'
      - '.github/workflows/**'
      - 'package.json'
      - 'pnpm-lock.yaml'

jobs:
  deploy-server:
    name: Deploy Server Staging
    runs-on: ubuntu-latest
    environment: staging
    concurrency: staging_server
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy API Staging
        run: |
          flyctl secrets set \
            DATABASE_URL="${{ secrets.STAGING_DATABASE_URL }}" \
            DISCORD_CLIENT_ID="${{ secrets.STAGING_DISCORD_CLIENT_ID }}" \
            DISCORD_CLIENT_SECRET="${{ secrets.STAGING_DISCORD_CLIENT_SECRET }}" \
            GOOGLE_CLIENT_ID="${{ secrets.STAGING_GOOGLE_CLIENT_ID }}" \
            GOOGLE_CLIENT_SECRET="${{ secrets.STAGING_GOOGLE_CLIENT_SECRET }}" \
            GITHUB_CLIENT_ID="${{ secrets.STAGING_GITHUB_CLIENT_ID }}" \
            GITHUB_CLIENT_SECRET="${{ secrets.STAGING_GITHUB_CLIENT_SECRET }}" \
            --app concord-api-staging

          flyctl deploy --remote-only --app concord-api-staging \
            --dockerfile Dockerfile \
            --config fly.toml \
            --env URL="https://staging.api.concord.fly.dev" \
            --env CORS_ORIGIN="https://staging.concord.fly.dev" \
            --env ALLOWED_ORIGINS="https://staging.concord.fly.dev,wss://staging.ws.concord.fly.dev" \
            --env NODE_ENV="production" \
            --strategy bluegreen \
            --wait-timeout 300
        working-directory: ./server
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-ws:
    name: Deploy WebSocket Staging
    runs-on: ubuntu-latest
    environment: staging
    concurrency: staging_ws
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy WebSocket Staging
        run: |
          flyctl deploy --remote-only --app concord-ws-staging \
            --dockerfile Dockerfile \
            --config fly.toml \
            --env URL="wss://staging.ws.concord.fly.dev" \
            --env CORS_ORIGIN="https://staging.concord.fly.dev" \
            --env MIX_ENV="prod" \
            --strategy bluegreen \
            --wait-timeout 300
        working-directory: ./ws
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-web:
    name: Deploy Web Staging
    needs: [deploy-server, deploy-ws]
    runs-on: ubuntu-latest
    environment: staging
    concurrency: staging_web
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy Web Staging
        run: |
          flyctl deploy --remote-only --app concord-web-staging \
            --dockerfile Dockerfile \
            --config fly.toml \
            --env NEXT_PUBLIC_URL="https://staging.concord.fly.dev" \
            --env NEXT_PUBLIC_API_URL="https://staging.api.concord.fly.dev" \
            --env NEXT_PUBLIC_WS_URL="wss://staging.ws.concord.fly.dev" \
            --env NODE_ENV="production" \
            --strategy bluegreen \
            --wait-timeout 300
        working-directory: ./web
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
